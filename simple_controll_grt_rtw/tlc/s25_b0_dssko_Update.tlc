%implements s25_b0_dssko_Update "C"

%function UpdateForTID(block, system, tid) Output
%if tid == 0
%assign ::GlobalCurrentTID = 0
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl
real_T (*lastU)[3];
real_T (*lastU_0)[9];
real_T (*lastU_1)[4];
real_T (*lastU_2)[12];
int32_T i;
%closefile localVarDecl
/* Update for Derivative: '<S14>/Derivative3' */
if (simple_controll_DW.TimeStampA == %<LibGetMathConstant(LibRealNonFinite("inf"), FcnGetDataTypeIdFromName("double"))>) {
    simple_controll_DW.TimeStampA = %<(SLibCG_SE(LibGetT()))>;
    lastU = (real_T (*)[3])simple_controll_DW.LastUAtTimeA;
} else if (simple_controll_DW.TimeStampB == %<LibGetMathConstant(LibRealNonFinite("inf"), FcnGetDataTypeIdFromName("double"))>) {
    simple_controll_DW.TimeStampB = %<(SLibCG_SE(LibGetT()))>;
    lastU = (real_T (*)[3])simple_controll_DW.LastUAtTimeB;
} else if (simple_controll_DW.TimeStampA < simple_controll_DW.TimeStampB) {
    simple_controll_DW.TimeStampA = %<(SLibCG_SE(LibGetT()))>;
    lastU = (real_T (*)[3])simple_controll_DW.LastUAtTimeA;
} else {
    simple_controll_DW.TimeStampB = %<(SLibCG_SE(LibGetT()))>;
    lastU = (real_T (*)[3])simple_controll_DW.LastUAtTimeB;
}
(*lastU)[0] = simple_controll_B.r_des[0];
(*lastU)[1] = simple_controll_B.r_des[1];
(*lastU)[2] = simple_controll_B.r_des[2];
/* End of Update for Derivative: '<S14>/Derivative3' */

/* Update for Derivative: '<S14>/Derivative4' */
if (simple_controll_DW.TimeStampA_p == %<LibGetMathConstant(LibRealNonFinite("inf"), FcnGetDataTypeIdFromName("double"))>) {
    simple_controll_DW.TimeStampA_p = %<(SLibCG_SE(LibGetT()))>;
    lastU = (real_T (*)[3])simple_controll_DW.LastUAtTimeA_k;
} else if (simple_controll_DW.TimeStampB_f == %<LibGetMathConstant(LibRealNonFinite("inf"), FcnGetDataTypeIdFromName("double"))>) {
    simple_controll_DW.TimeStampB_f = %<(SLibCG_SE(LibGetT()))>;
    lastU = (real_T (*)[3])simple_controll_DW.LastUAtTimeB_m;
} else if (simple_controll_DW.TimeStampA_p < simple_controll_DW.TimeStampB_f) {
    simple_controll_DW.TimeStampA_p = %<(SLibCG_SE(LibGetT()))>;
    lastU = (real_T (*)[3])simple_controll_DW.LastUAtTimeA_k;
} else {
    simple_controll_DW.TimeStampB_f = %<(SLibCG_SE(LibGetT()))>;
    lastU = (real_T (*)[3])simple_controll_DW.LastUAtTimeB_m;
}
(*lastU)[0] = simple_controll_B.Saturation5[0];
(*lastU)[1] = simple_controll_B.Saturation5[1];
(*lastU)[2] = simple_controll_B.Saturation5[2];
/* End of Update for Derivative: '<S14>/Derivative4' */

/* Update for Derivative: '<S14>/Derivative5' */
if (simple_controll_DW.TimeStampA_g == %<LibGetMathConstant(LibRealNonFinite("inf"), FcnGetDataTypeIdFromName("double"))>) {
    simple_controll_DW.TimeStampA_g = %<(SLibCG_SE(LibGetT()))>;
    lastU = (real_T (*)[3])simple_controll_DW.LastUAtTimeA_kb;
} else if (simple_controll_DW.TimeStampB_p == %<LibGetMathConstant(LibRealNonFinite("inf"), FcnGetDataTypeIdFromName("double"))>) {
    simple_controll_DW.TimeStampB_p = %<(SLibCG_SE(LibGetT()))>;
    lastU = (real_T (*)[3])simple_controll_DW.LastUAtTimeB_n;
} else if (simple_controll_DW.TimeStampA_g < simple_controll_DW.TimeStampB_p) {
    simple_controll_DW.TimeStampA_g = %<(SLibCG_SE(LibGetT()))>;
    lastU = (real_T (*)[3])simple_controll_DW.LastUAtTimeA_kb;
} else {
    simple_controll_DW.TimeStampB_p = %<(SLibCG_SE(LibGetT()))>;
    lastU = (real_T (*)[3])simple_controll_DW.LastUAtTimeB_n;
}
(*lastU)[0] = simple_controll_B.Saturation4[0];
(*lastU)[1] = simple_controll_B.Saturation4[1];
(*lastU)[2] = simple_controll_B.Saturation4[2];
/* End of Update for Derivative: '<S14>/Derivative5' */

/* Update for Derivative: '<S14>/Derivative2' */
if (simple_controll_DW.TimeStampA_o == %<LibGetMathConstant(LibRealNonFinite("inf"), FcnGetDataTypeIdFromName("double"))>) {
    simple_controll_DW.TimeStampA_o = %<(SLibCG_SE(LibGetT()))>;
    lastU_0 = (real_T (*)[9])simple_controll_DW.LastUAtTimeA_m;
} else if (simple_controll_DW.TimeStampB_a == %<LibGetMathConstant(LibRealNonFinite("inf"), FcnGetDataTypeIdFromName("double"))>) {
    simple_controll_DW.TimeStampB_a = %<(SLibCG_SE(LibGetT()))>;
    lastU_0 = (real_T (*)[9])simple_controll_DW.LastUAtTimeB_k;
} else if (simple_controll_DW.TimeStampA_o < simple_controll_DW.TimeStampB_a) {
    simple_controll_DW.TimeStampA_o = %<(SLibCG_SE(LibGetT()))>;
    lastU_0 = (real_T (*)[9])simple_controll_DW.LastUAtTimeA_m;
} else {
    simple_controll_DW.TimeStampB_a = %<(SLibCG_SE(LibGetT()))>;
    lastU_0 = (real_T (*)[9])simple_controll_DW.LastUAtTimeB_k;
}
for (i = 0; i < 9; i++) {
    (*lastU_0)[i] = simple_controll_B.R_des[i];
}
/* End of Update for Derivative: '<S14>/Derivative2' */

/* Update for Derivative: '<S14>/Derivative1' */
if (simple_controll_DW.TimeStampA_d == %<LibGetMathConstant(LibRealNonFinite("inf"), FcnGetDataTypeIdFromName("double"))>) {
    simple_controll_DW.TimeStampA_d = %<(SLibCG_SE(LibGetT()))>;
    lastU = (real_T (*)[3])simple_controll_DW.LastUAtTimeA_i;
} else if (simple_controll_DW.TimeStampB_b == %<LibGetMathConstant(LibRealNonFinite("inf"), FcnGetDataTypeIdFromName("double"))>) {
    simple_controll_DW.TimeStampB_b = %<(SLibCG_SE(LibGetT()))>;
    lastU = (real_T (*)[3])simple_controll_DW.LastUAtTimeB_e;
} else if (simple_controll_DW.TimeStampA_d < simple_controll_DW.TimeStampB_b) {
    simple_controll_DW.TimeStampA_d = %<(SLibCG_SE(LibGetT()))>;
    lastU = (real_T (*)[3])simple_controll_DW.LastUAtTimeA_i;
} else {
    simple_controll_DW.TimeStampB_b = %<(SLibCG_SE(LibGetT()))>;
    lastU = (real_T (*)[3])simple_controll_DW.LastUAtTimeB_e;
}
(*lastU)[0] = simple_controll_B.Saturation2[0];
(*lastU)[1] = simple_controll_B.Saturation2[1];
(*lastU)[2] = simple_controll_B.Saturation2[2];
/* End of Update for Derivative: '<S14>/Derivative1' */

/* Update for Derivative: '<S76>/Derivative' */
if (simple_controll_DW.TimeStampA_h == %<LibGetMathConstant(LibRealNonFinite("inf"), FcnGetDataTypeIdFromName("double"))>) {
    simple_controll_DW.TimeStampA_h = %<(SLibCG_SE(LibGetT()))>;
    lastU_1 = (real_T (*)[4])simple_controll_DW.LastUAtTimeA_b;
} else if (simple_controll_DW.TimeStampB_o == %<LibGetMathConstant(LibRealNonFinite("inf"), FcnGetDataTypeIdFromName("double"))>) {
    simple_controll_DW.TimeStampB_o = %<(SLibCG_SE(LibGetT()))>;
    lastU_1 = (real_T (*)[4])simple_controll_DW.LastUAtTimeB_kl;
} else if (simple_controll_DW.TimeStampA_h < simple_controll_DW.TimeStampB_o) {
    simple_controll_DW.TimeStampA_h = %<(SLibCG_SE(LibGetT()))>;
    lastU_1 = (real_T (*)[4])simple_controll_DW.LastUAtTimeA_b;
} else {
    simple_controll_DW.TimeStampB_o = %<(SLibCG_SE(LibGetT()))>;
    lastU_1 = (real_T (*)[4])simple_controll_DW.LastUAtTimeB_kl;
}
(*lastU_1)[0] = simple_controll_B.Constant6[0];
(*lastU_1)[1] = simple_controll_B.Constant6[1];
(*lastU_1)[2] = simple_controll_B.Constant6[2];
(*lastU_1)[3] = simple_controll_B.Constant6[3];
/* End of Update for Derivative: '<S76>/Derivative' */

/* Update for Derivative: '<S76>/Derivative1' */
if (simple_controll_DW.TimeStampA_c == %<LibGetMathConstant(LibRealNonFinite("inf"), FcnGetDataTypeIdFromName("double"))>) {
    simple_controll_DW.TimeStampA_c = %<(SLibCG_SE(LibGetT()))>;
    lastU_2 = (real_T (*)[12])simple_controll_DW.LastUAtTimeA_f;
} else if (simple_controll_DW.TimeStampB_c == %<LibGetMathConstant(LibRealNonFinite("inf"), FcnGetDataTypeIdFromName("double"))>) {
    simple_controll_DW.TimeStampB_c = %<(SLibCG_SE(LibGetT()))>;
    lastU_2 = (real_T (*)[12])simple_controll_DW.LastUAtTimeB_em;
} else if (simple_controll_DW.TimeStampA_c < simple_controll_DW.TimeStampB_c) {
    simple_controll_DW.TimeStampA_c = %<(SLibCG_SE(LibGetT()))>;
    lastU_2 = (real_T (*)[12])simple_controll_DW.LastUAtTimeA_f;
} else {
    simple_controll_DW.TimeStampB_c = %<(SLibCG_SE(LibGetT()))>;
    lastU_2 = (real_T (*)[12])simple_controll_DW.LastUAtTimeB_em;
}
for (i = 0; i < 12; i++) {
    (*lastU_2)[i] = simple_controll_B.omegaP[i];
}
/* End of Update for Derivative: '<S76>/Derivative1' */

/* Update for Derivative: '<S76>/Derivative2' */
if (simple_controll_DW.TimeStampA_j == %<LibGetMathConstant(LibRealNonFinite("inf"), FcnGetDataTypeIdFromName("double"))>) {
    simple_controll_DW.TimeStampA_j = %<(SLibCG_SE(LibGetT()))>;
    lastU = (real_T (*)[3])simple_controll_DW.LastUAtTimeA_g;
} else if (simple_controll_DW.TimeStampB_m == %<LibGetMathConstant(LibRealNonFinite("inf"), FcnGetDataTypeIdFromName("double"))>) {
    simple_controll_DW.TimeStampB_m = %<(SLibCG_SE(LibGetT()))>;
    lastU = (real_T (*)[3])simple_controll_DW.LastUAtTimeB_p;
} else if (simple_controll_DW.TimeStampA_j < simple_controll_DW.TimeStampB_m) {
    simple_controll_DW.TimeStampA_j = %<(SLibCG_SE(LibGetT()))>;
    lastU = (real_T (*)[3])simple_controll_DW.LastUAtTimeA_g;
} else {
    simple_controll_DW.TimeStampB_m = %<(SLibCG_SE(LibGetT()))>;
    lastU = (real_T (*)[3])simple_controll_DW.LastUAtTimeB_p;
}
(*lastU)[0] = simple_controll_B.r_o1[0];
(*lastU)[1] = simple_controll_B.r_o1[1];
(*lastU)[2] = simple_controll_B.r_o1[2];
/* End of Update for Derivative: '<S76>/Derivative2' */
%closefile cfgTxt
%<cfgTxt>
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Update(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(1, 8, fcnProtoType)>
%<LibSetSystemField(system, "CachedUpdate0LocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 2
%assign ::GlobalCurrentTID = 2
%assign ::GlobalCurrentTID = []
%endif
%endfunction
